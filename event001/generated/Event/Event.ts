// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AnotherLog extends ethereum.Event {
  get params(): AnotherLog__Params {
    return new AnotherLog__Params(this);
  }
}

export class AnotherLog__Params {
  _event: AnotherLog;

  constructor(event: AnotherLog) {
    this._event = event;
  }
}

export class Log extends ethereum.Event {
  get params(): Log__Params {
    return new Log__Params(this);
  }
}

export class Log__Params {
  _event: Log;

  constructor(event: Log) {
    this._event = event;
  }

  get sender(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get message(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class Event extends ethereum.SmartContract {
  static bind(address: Address): Event {
    return new Event("Event", address);
  }
}

export class TestCall extends ethereum.Call {
  get inputs(): TestCall__Inputs {
    return new TestCall__Inputs(this);
  }

  get outputs(): TestCall__Outputs {
    return new TestCall__Outputs(this);
  }
}

export class TestCall__Inputs {
  _call: TestCall;

  constructor(call: TestCall) {
    this._call = call;
  }
}

export class TestCall__Outputs {
  _call: TestCall;

  constructor(call: TestCall) {
    this._call = call;
  }
}
